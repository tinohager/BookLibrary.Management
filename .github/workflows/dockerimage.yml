name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-api:

    runs-on: ubuntu-latest
    env:
      working-directory: ./src 

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
      working-directory: ${{env.working-directory}}
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ${{env.working-directory}}
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      working-directory: ${{env.working-directory}}
    - name: Publish
      run: dotnet publish --no-restore --configuration Release --output ../publish
      working-directory: ${{env.working-directory}}
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: api
        # Directory containing files to upload
        path: publish/
      
  build-spa:

    runs-on: ubuntu-latest
    env:
      working-directory: ./src/BookLibrary.Management.Spa

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Clean slate
      run: npm ci
      working-directory: ${{env.working-directory}}
    - name: Build
      run: npm run build --if-present
      working-directory: ${{env.working-directory}}
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: spa
        # Directory containing files to upload
        path: ${{env.working-directory}}/dist/


  build:

    needs: [build-api, build-spa]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Download api
      uses: actions/download-artifact@v1
      with:
        name: api
    - name: Download spa
      uses: actions/download-artifact@v1
      with:
        name: spa
    - name: Build the Docker image
      run: |
        cat ~/GH_TOKEN.txt | docker login docker.pkg.github.com -u tinohager --password-stdin
        docker build . --file Dockerfile --tag docker.pkg.github.com/tinohager/BookLibrary.Management/booklibrary:$(date +%s)
        docker push docker.pkg.github.com/tinohager/BookLibrary.Management/booklibrary:$(date +%s)
